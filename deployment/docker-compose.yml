version: "3.6"

networks:
  outgoing:
    driver: bridge
  internal:
    internal: true
  https-proxy_traefik:
    external: true

services:
  frontend:
    restart: unless-stopped
    image: codeformuenster/muenster-jetzt-frontend:${TAG_NAME}
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=https-proxy_traefik"
      - "traefik.http.routers.msj-${TAG_NAME}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.msj-${TAG_NAME}.entrypoints=web-secure"
      - "traefik.http.routers.msj-${TAG_NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.services.msj-${TAG_NAME}.loadbalancer.server.port=8080"
    networks:
      - https-proxy_traefik
    volumes:
      - "../uploads:/www/static/uploads:ro"
    logging:
      driver: loki
      options:
        loki-url: "${LOKI_URL}"
  api:
    restart: unless-stopped
    image: codeformuenster/muenster-jetzt-api:${TAG_NAME}
    expose:
      - "8000"
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_NAME
      - DB_HOST
      - DB_PORT
      - MUENSTERLAND_API_TOKEN
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=https-proxy_traefik"
      - "traefik.http.routers.msj-${TAG_NAME}-api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.msj-${TAG_NAME}-api.entrypoints=web-secure"
      - "traefik.http.routers.msj-${TAG_NAME}-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.msj-${TAG_NAME}-api.loadbalancer.server.port=8000"
    networks:
      - https-proxy_traefik
      - internal
      - outgoing
    logging:
      driver: loki
      options:
        loki-url: "${LOKI_URL}"
  db:
    image: postgres:12.3
    restart: unless-stopped
    shm_size: 256MB
    expose:
      - "5432"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    networks:
      - internal
    logging:
      driver: loki
      options:
        loki-url: "${LOKI_URL}"